<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--请根据实际需要将dataSource内的配置信息补全。
driver：com.mysql.cj.jdbc.Driver
url:jdbc:mysql://<数据库地址>:<端口号>/<数据库>?useSSL=false&amp;serverTimezone=GMT
username:root
password:请输入连接密码。
有关配置信息已经转移到dbconfig.properties配置文件当中。
这里只需要使用${...}获取值即可。
-->

<!--
以下是各标签的配置顺序，如果编译不通过，请进行确认。
properties?
settings?
typeAliases?
typeHandlers?
objectFactory?
objectWrapperFactory?
plugins?
environments?  *必须
databaseIdProvider?
mappers?       *必须
-->
<configuration>


    <!--
        如果将连接池信息写入了外部的properties配置文件中
        请使用该标签进行引入。
        项目目录下使用resource=?
        网络连接或者磁盘目录使用url=?
    -->

    <properties resource="conf/dbconfig.properties">
    </properties>

    <!--
    如果要进行额外配置，请在settings标签中进行更改。
    这里以驼峰命名转换为例。如果需要开启，请将值改为true.
    -->

    <settings>
        <setting name="mapUnderscoreToCamelCase" value="false"/>
    </settings>

    <!--
        该标签为复杂的JavaBean全类名指派别名。默认是javaBean类的小写开头类名。
        比如：com.domain.Object  ->  object
        也可以为alias赋值进行自定义声明。
        之后在其他配置文件中使用该javaBean时，只需要在resultType当中填写别名即可。

        如果对某个包指派别名，则应该使用package标签。
        <package name="com.domain.package.bean" />

        在包扫描的情况下可以直接在Java类当中使用@alias("newAlias")进行区分以避免混淆。

        别名不区分大小写。
    -->
    <typeAliases>
        <typeAlias type="*" alias="*"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    <!--一定要将写好的映射文件添加进来。相当于将映射文件注册到全局配置文件当中
    Just copy its relative paths and paste to resource.
    -->
    <mappers>
        <mapper resource="*"/>
    </mappers>


</configuration>