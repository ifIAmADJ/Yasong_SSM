<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
namespace:命名空间,设置为代理接口的*全类名*或者相对路径
id:sql语句的唯一标识，设置为代理接口的类方法名。
resultType:返回值类型。
#{param}:将接口的参数名为"param"的字段插入到sql语句中。
-->
<mapper namespace="Dao.UserDao">
    <select id="Validation" resultType="java.lang.String">
 select '1' from user where username = #{username} and password = #{password}
 </select>

    <select id="IsvValidUsername" resultType="java.lang.String">
 select '1' from user where username = #{username}
 </select>

<insert id="InsertUser2DB" parameterType="Entity.User">
    insert into user(user_id, username, password, nickname, sex, exp, level, points, comments, fans, likenum, productions, signature, avanta_path,achievement, join_date, last_login_date)
    values (#{user.user_id},#{user.username},#{user.password},#{user.nickname},#{user.sex},#{user.exp},#{user.level},#{user.points},#{user.comments},#{user.fans},#{user.likenum},#{user.productions},#{user.signature},#{user.avanta_path},#{user.achievement},#{user.join_date},#{user.last_login_date})

</insert>

    <select id="GetUserInDB" resultType="Entity.User">
 select * from user where username = #{username}
 </select>

    <update id="UpdateNickname" parameterType="java.lang.String">
update user set nickname=#{nickname} where user_id=#{user_id}
    </update>

    <update id="UpdateSex" parameterType="java.lang.String">
update user set sex=#{sex} where user_id=#{user_id}
    </update>

    <update id="UpdateSignature" parameterType="java.lang.String">
update user set signature=#{signature} where user_id=#{user_id}
    </update>


    <select id="GetUserViewInDB" resultType="java.util.Map">
        select user_id, nickname, sex, exp, level, points, comments, fans, likenum, productions, signature, avanta_path ,achievement from user where user_id=#{user_id}
    </select>


    <select id="selectNicknameByUser_id" resultType="java.lang.String">
        select nickname from user where user_id =#{user_id}
    </select>

    <select id="selectAvanta_pathByUser_id" resultType="java.lang.String">
        select avanta_path from user where user_id =#{user_id}
    </select>

    <select id="selectPointsByUser_id" resultType="java.lang.String">
        select points from user where user_id =#{user_id}
    </select>


    <select id="selectAchievementByUser_id" resultType="java.lang.String">
        select achievement from user where user_id =#{user_id}
    </select>


    <select id="hisInform" resultType="java.util.Map">
        select avanta_path,nickname,sex,level,fans,signature from user where user_id =#{user_id}
    </select>

    <select id="isPicked" resultType="java.lang.String">
 select '1' from relationship where user_id = #{my_id} and picked_user_id = #{his_id}
 </select>

    <select id="hisAchievements" resultType="java.lang.String">
 select achievement from user_achievement where user_id=#{user_id}
 </select>

    <insert id="pickHim">
    insert into  relationship(user_id, picked_user_id) values (#{my_id},#{his_id})
    </insert>

    <delete id="dissHim">
    delete from relationship  where user_id=#{my_id} and picked_user_id =#{his_id}
    </delete>

    <select id="getMyInform" resultType="java.util.Map">
        select avanta_path,nickname,level,fans,achievement,DATE_FORMAT(join_date,'%Y-%m-%d %H:%i:%s') join_date,sex,signature  from user where user_id =#{user_id}
    </select>


    <update id="putMyNewAvanta" parameterType="java.lang.String">
update user set avanta_path=#{avanta_path} where user_id=#{user_id}
    </update>

    <select id="getAllAvantas" resultType="java.lang.String">
select avanta_path
from avanta_paths
limit #{start},#{count}
 </select>

    <select id="countALLAvantas" resultType="java.lang.Integer">
    select count(avanta_path)
from avanta_paths
    </select>

    <select id="getMarkedUserPoems" resultType="java.util.Map">
select title,user_id,DATE_FORMAT(marked_date,'%m-%d-%Y') as marked_date, user_marked_user_poems.poem_code as poem_code
from user_marked_user_poems,user_poems
where user_marked_user_poems.user_id=#{user_id} and user_marked_user_poems.user_id=user_poems.user_id
limit #{start},#{count}
 </select>

    <select id="getMyTrack" resultType="java.util.Map">
        select avanta_path,nickname,achievement,`level`,exp,comments,likenum,fans from user where user_id =#{user_id}
    </select>

    <select id="getMyAchievements" resultType="java.lang.String">
        select achievement from user_achievement where user_id =#{user_id}
    </select>

    <select id="getALLAchievements" resultType="java.lang.String">
        select achievement from achievements
    </select>

    <update id="chooseMyNewAchievement">
update user set achievement=#{achievement} where user_id=#{user_id}
    </update>

    <select id="isMyAchievement" resultType="java.lang.String">
        select '1' from user_achievement where user_id=#{user_id} and achievement=#{achievement}
    </select>

    <select id="getIMarkedUsers" resultType="java.util.Map">
select picked_user_id,nickname,signature,avanta_path,sex
from relationship,user
where  relationship.user_id=#{user_id} and relationship.picked_user_id=user.user_id
limit #{start},#{count}
 </select>

    <select id="CountIMarkedUsers" resultType="java.lang.Integer">
    select count(user_id)
from relationship
where user_id=#{user_id}
    </select>

    <select id="whoMarkedMe" resultType="java.util.Map">
select relationship.user_id,nickname,signature,avanta_path,sex
from relationship,user
where  relationship.picked_user_id=#{user_id} and relationship.user_id=user.user_id
limit #{start},#{count}
 </select>

    <select id="CountWhoMarkedMe" resultType="java.lang.Integer">
    select count(picked_user_id)
from relationship
where picked_user_id=#{user_id}
    </select>

    <update id="addUserFans" parameterType="java.lang.String">
update user set user.fans=fans+1 where user_id=#{user_id}
    </update>
    <update id="subUserFans" parameterType="java.lang.String">
update user set user.fans=fans-1 where user_id=#{user_id}
    </update>

    <update id="addUserLikenum" parameterType="java.lang.String">
update user set user.likenum=likenum+1 where user_id=#{user_id}
    </update>

    <update id="subUserLikenum" parameterType="java.lang.String">
update user set user.likenum=likenum-1 where user_id=#{user_id}
    </update>

    <update id="addUserComments" parameterType="java.lang.String">
update user set user.comments=comments+1 where user_id=#{user_id}
    </update>

    <update id="subUserComments" parameterType="java.lang.String">
update user set user.comments=comments-1 where user_id=#{user_id}
    </update>


</mapper>