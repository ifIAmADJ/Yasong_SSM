<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
namespace:命名空间,设置为代理接口的*全类名*或者相对路径
id:sql语句的唯一标识，设置为代理接口的类方法名。
resultType:返回值类型。
#{param}:将接口的参数名为"param"的字段插入到sql语句中。
-->
<mapper namespace="Dao.ClassicalPoemsDao">
    <select id="getDailyPoem" resultType="java.util.Map">
select  poem_code,text,tag ,poet_name,dynasty
from   classical_poems,poet
where classical_poems.poet_code = poet.poet_code
limit 0,1
</select>

    <select id="ifThisClassicalPoemHasMarked" resultType="java.lang.String">
select '1'
from user_marked_classical_poems
where user_id=#{user_id} and poem_code = #{poem_code}
</select>
    <insert id="markThisClassicalPoem">
insert into user_marked_classical_poems(user_id, poem_code,marked_date) values (#{user_id},#{poem_code},#{marked_date})
</insert>

<select id="browseClassicalPoem" resultType="java.util.Map">
select  poem_code,poet.poet_code as poet_code,text,tag,poet_name,classical_poems.explain as `explain`,dynasty,mark_number,avanta_path
from   classical_poems,poet
where classical_poems.poet_code = poet.poet_code and classical_poems.poem_code=#{poem_code}
</select>


<insert id="putComment2ClassicalPoem">
insert into classical_poem_comment(poem_code, comment_date, user_id, comment_text) values (#{poem_code},#{comment_date},#{user_id},#{comment_text})
</insert>

    <select id="CountCommentsByClassicalPoemCode" resultType="java.lang.Integer">
select count(user_id) from classical_poem_comment
where poem_code=#{poem_code}
 </select>

    <select id="getCommentsByClassicalPoemCode" resultType="java.util.Map">
select avanta_path,nickname,comment_text,DATE_FORMAT(comment_date,'%Y-%m-%d %H:%i:%s') as comment_date
from classical_poem_comment,user
where poem_code=#{poem_code} and classical_poem_comment.user_id="user".user_id
limit #{start},#{count}
 </select>

    <select id="getMarkedClassicalPoems" resultType="java.util.Map">
select title,poet_name,DATE_FORMAT(marked_date,'%m-%d-%Y') as marked_date,user_marked_classical_poems.poem_code as poem_code
from user_marked_classical_poems,classical_poems,poet
where user_id=#{user_id} and user_marked_classical_poems.poem_code=classical_poems.poem_code and classical_poems.poet_code=poet.poet_code
limit #{start},#{count}
 </select>


<select id="CountAllMarkedClassicalPoems" resultType="java.lang.Integer">
select count(poem_code)
from user_marked_classical_poems
where user_id =#{user_id}
    </select>

    <delete id="deleteMarkedClassicalPoems">
        delete from user_marked_classical_poems where user_id=#{user_id} and poem_code=#{poem_code}
    </delete>

    <update id="addMarkedNumber" parameterType="java.lang.Integer">
update classical_poems set mark_number=mark_number+1 where poem_code=#{poem_code}
 </update>

    <update id="subMarkedNumber" parameterType="java.lang.Integer">
update classical_poems set mark_number=mark_number-1 where poem_code=#{poem_code}
 </update>

</mapper>